name: Build IOS

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: macOS-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with: 
          path: 'cbreez'     

      - uses: actions/checkout@v3
        with:         
          repository: 'breez/breez-sdk'                   
          ssh-key: ${{secrets.REPO_SSH_KEY}}          
          path: 'breez-sdk'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'          

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'      

      - name: flutter-doctor
        run: |
          cd cbreez
          flutter doctor

      - name: pub-get
        run: |
          cd cbreez
          flutter pub get

      - name: dart-analyze
        run: |
          cd cbreez
          dart analyze --fatal-infos

      - name: run-tests
        run: |
          cd cbreez
          flutter test

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install the provisioning profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          # create variables
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          # import provisioning profile from secrets
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles      

      - name: Build Flutter
        run: flutter build ios --release --no-codesign

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme ${{ env.SHEME }} -configuration ${{ env.BUILD_CONFIGURATION }}

      - name: Build xArchive
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace -scheme ${{ env.SHEME }} -configuration ${{ env.BUILD_CONFIGURATION }} DEVELOPMENT_TEAM=${{ env.TEAM_ID }} -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=106bdc42-25d3-4f77-a431-e69c56fc0b49 clean archive CODE_SIGN_IDENTITY="Apple Distribution: Damien Aicheh"
      - name: Export ipa
        run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist

      - name: Publish iOS Artefacts
        uses: actions/upload-artifact@v1
        with:
          name: release-ios
          path: build-output/ios
      
