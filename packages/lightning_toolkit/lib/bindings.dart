// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Dart bindings to call lightning toolkit functions
class LightningToolkitBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LightningToolkitBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LightningToolkitBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Int8> test(
    ffi.Pointer<ffi.Int8> to,
  ) {
    return _test(
      to,
    );
  }

  late final _testPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Int8> Function(ffi.Pointer<ffi.Int8>)>>('test');
  late final _test = _testPtr
      .asFunction<ffi.Pointer<ffi.Int8> Function(ffi.Pointer<ffi.Int8>)>();

  void test_cstr_free(
    ffi.Pointer<ffi.Int8> s,
  ) {
    return _test_cstr_free(
      s,
    );
  }

  late final _test_cstr_freePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Int8>)>>(
          'test_cstr_free');
  late final _test_cstr_free =
      _test_cstr_freePtr.asFunction<void Function(ffi.Pointer<ffi.Int8>)>();
}
